{%- from 'fub.jinja' import  interface_method, key_parameters -%}

{%- macro default_method(name, child, return_type, parents_only=False) %}
@Override
public {{ return_type }} {{ interface_method('get', name, child) }}({{ key_parameters(child, 'String', parents_only) }}) {
  System.out.println("{{ interface_method('get', name, child) }}");
  return {{ child.java_type | javadefault }};
}
{% endmacro -%}

package {{ ctx.package }};

{% for import in ctx.imports -%}
import {{ import }};
{%- endfor %}
public class {{ name }} implements {{ ctx.interface_name }}{

  public {{ name }}() {}
{% for key, rpc in ctx.rpcs.items() %}
  public Route {{ key }}(
    {%- if rpc.input %}{% for name, input in rpc.input.vars.items() -%}
    {{ input.java_type }} {{ name }}{% if not loop.last %}, {% endif %}
    {%- endfor %}{% endif -%}
    ) {
    String msg = String.format("You have called: {{ key }}
    {%- if rpc.input %} with {% for name, input in rpc.input.vars.items() -%}
        %s{% if not loop.last %}, {% endif %}
        {%- endfor -%}
    {%- endif -%}"
    {%- if rpc.input %}{% for name, input in rpc.input.vars.items() -%}
        , {{ name }}{%- endfor -%}
    {%- endif -%});
    return Directives.complete(msg);
  }
{% endfor %}
{%- for name, child in ctx.module.children.items() recursive -%}
  {%- if loop.depth == 1 %}{{ default_method(name, child, child.java_type, True) | indent(2) }}{%- endif -%}
  {%- if child.keys -%} {{ default_method(name, child, child.element_type) | indent(2) }} {%- endif -%}
{{ loop(child.children.items()) }}
{%- endfor %}
}
